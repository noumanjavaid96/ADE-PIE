Sprint,Epic,Acceptance Criteria,Discipline,Feature (Client Glossary),Status,Sub-Task Description,User Story,Assignee
1,Admin Experience,1. Admin can Create Leagues. 2. Admin can Create Modules within a League. 3. Admin can Create Matchdays within a Module.,Frontend,Content Management System (CMS),Completed,"Build UI components for managing Leagues, Modules, and Matchdays.","As an Admin, I want to create and manage Leagues, Modules, and Matchdays.",
1,Admin Experience,1. Login page exists at /admin. 2. Accepts email/password. 3. Redirects to Admin Dashboard on success.,Frontend,Admin Authentication,Completed,"Build Admin Login UI component (email, password, button).","As an Admin, I want a secure login page.",
1,Admin Experience,1. Login page exists at /admin. 2. Accepts email/password. 3. Redirects to Admin Dashboard on success.,Backend,Admin Authentication,Completed,Create /admin/login API endpoint with password hashing.,"As an Admin, I want a secure login page.",
2,Learner Journey,"1. All 11 content blocks (Video, Quiz, etc.) are functional. 2. Each block is presented within the themed 2D environment.",Frontend,Interactive Learning Blocks,Completed,"Develop the 11 interactive learning block components (Video, Quiz, etc.).","As a Learner, I want to interact with various types of content.",
2,Learner Journey,1. Leagues screen shows overall progress. 2. Modules screen shows progress per module. 3. Matchdays screen shows completion percentage.,Backend,Progress Tracking UI,Completed,Create API endpoints to serve user progress data.,"As a Learner, I want to see my progress across all levels of the platform.",
2,Learner Journey,1. Leagues screen shows overall progress. 2. Modules screen shows progress per module. 3. Matchdays screen shows completion percentage.,Frontend,Progress Tracking UI,Completed,"Implement Progress Tracking UI components for Leagues, Modules, and Matchdays.","As a Learner, I want to see my progress across all levels of the platform.",
2,Learner Journey,1. Learner can log in with provided credentials. 2. A skippable splash screen/intro video is shown on first login.,Frontend,User Authentication & Onboarding,Completed,Build Learner Login UI and connect to authentication endpoint.,"As a Learner, I want to log in and experience a smooth onboarding.",
3,Process Intelligence Engine,"1. Feedback is displayed in a themed console. 2. Analysis includes weak points, recommendations, and a confidence score. 3. Coach Klaus can summarize the feedback.",Frontend,PIE - Feedback Display,Planned,FE: Build UI component to display formatted PIE feedback.,"As a Learner, I want to receive clear, actionable feedback from the PIE.",
3,Process Intelligence Engine,"1. Feedback is displayed in a themed console. 2. Analysis includes weak points, recommendations, and a confidence score. 3. Coach Klaus can summarize the feedback.",Backend,PIE - Feedback Display,Planned,BE: Integrate with PIE backend to process submissions and retrieve analysis.,"As a Learner, I want to receive clear, actionable feedback from the PIE.",
3,Process Intelligence Engine,"1. UI provides options for text, voice, and document upload. 2. Voice input uses the browser microphone. 3. Submissions are sent to the PIE backend.",Frontend,PIE - Multi-Modal Submissions,Planned,FE: Build the PIE submission UI component.,"As a Learner, I want to submit work to the PIE using text, voice, or documents.",
3,Process Intelligence Engine,"1. UI provides options for text, voice, and document upload. 2. Voice input uses the browser microphone. 3. Submissions are sent to the PIE backend.",Backend,PIE - Multi-Modal Submissions,Planned,"BE: Create API endpoint to handle multi-modal submissions (text, file).","As a Learner, I want to submit work to the PIE using text, voice, or documents.",
3,Coach Klaus & AI,1. System prepends persona-defining instructions to all LLM prompts. 2. System maintains a 'Session Memory' of recent interactions. 3. The engine is hard-coded to use the Aleph Alpha model.,Database,Prompt Layer / Role & Prompt Control Engine,Planned,DB: Design schema for 'Session Memory' to store user interaction history.,"As an AI system, I need a Prompt Control Engine for persona consistency.",
3,Coach Klaus & AI,1. System prepends persona-defining instructions to all LLM prompts. 2. System maintains a 'Session Memory' of recent interactions. 3. The engine is hard-coded to use the Aleph Alpha model.,Backend,Prompt Layer / Role & Prompt Control Engine,Planned,BE: Design and implement the Prompt Control Engine logic.,"As an AI system, I need a Prompt Control Engine for persona consistency.",
3,Coach Klaus & AI,1. Coach Klaus's avatar appears in a designated spot. 2. He delivers a pre-scripted welcome message. 3. He may gesture towards the first activity.,Frontend,"Interactive, Empathic Coach Klaus",Planned,FE: Integrate D-ID avatar component into the Matchday scene.,"As a Learner, I want to be greeted by Coach Klaus when I start a Matchday.",
3,Coach Klaus & AI,1. Coach Klaus's avatar appears in a designated spot. 2. He delivers a pre-scripted welcome message. 3. He may gesture towards the first activity.,Backend,"Interactive, Empathic Coach Klaus",Planned,BE: Create endpoint to fetch pre-scripted intro text for a given Matchday.,"As a Learner, I want to be greeted by Coach Klaus when I start a Matchday.",
4,Gamification,1. Achievements are unlocked with a visual notification. 2. A 'Highlight Wall' in the profile displays earned and unearned (greyed-out) badges.,Backend,Achievements & Highlight Wall,Planned,BE: Create logic to track and award achievements; create API endpoint to serve achievement data.,"As a Learner, I want to earn achievements and see them on a 'Highlight Wall'.",
4,Gamification,1. Achievements are unlocked with a visual notification. 2. A 'Highlight Wall' in the profile displays earned and unearned (greyed-out) badges.,Frontend,Achievements & Highlight Wall,Planned,FE: Build the 'Highlight Wall' UI component accessible from the user's profile.,"As a Learner, I want to earn achievements and see them on a 'Highlight Wall'.",
4,Personalization,"1. When an ADE trigger is met, Coach Klaus offers an optional micro-lesson. 2. The lesson is delivered in-scene to avoid disrupting the learning flow.",Backend,Personalized Micro-Lessons,Planned,BE: Create API endpoint to serve content for personalized micro-lessons.,"As a Learner, I want to be offered a targeted micro-lesson when I'm struggling.",
4,Personalization,"1. When an ADE trigger is met, Coach Klaus offers an optional micro-lesson. 2. The lesson is delivered in-scene to avoid disrupting the learning flow.",Frontend,Personalized Micro-Lessons,Planned,FE: Build the in-scene micro-lesson container component.,"As a Learner, I want to be offered a targeted micro-lesson when I'm struggling.",
4,Personalization,1. ADE monitors for triggers: 3+ incorrect quiz attempts OR Confidence Score < 40% OR 90 seconds of inactivity. 2. The system can recognize key phrases of confusion.,Backend,Adaptive Decision Engine (ADE),Planned,BE: Implement the core ADE rules engine to evaluate triggers.,"As a system, I need to detect when a learner is struggling.",
4,Personalization,1. ADE monitors for triggers: 3+ incorrect quiz attempts OR Confidence Score < 40% OR 90 seconds of inactivity. 2. The system can recognize key phrases of confusion.,Database,Adaptive Decision Engine (ADE),Planned,DB: Add 'ConfidenceScore' field to the user profile schema.,"As a system, I need to detect when a learner is struggling.",
4,Personalization,1. ADE monitors for triggers: 3+ incorrect quiz attempts OR Confidence Score < 40% OR 90 seconds of inactivity. 2. The system can recognize key phrases of confusion.,Backend,Adaptive Decision Engine (ADE),Planned,BE: Develop event listeners for quiz submissions to track attempts and scores.,"As a system, I need to detect when a learner is struggling.",
5,Community,1. Each module has a dedicated discussion forum. 2. Users can create new posts with rich text and attachments. 3. Users can reply to posts in nested threads.,Frontend,Topic-Based Discussion Forums,Planned,FE: Build the UI for topic-based discussion forums.,"As a Learner, I want to discuss topics with my peers in a forum.",
5,Community,1. Each module has a dedicated discussion forum. 2. Users can create new posts with rich text and attachments. 3. Users can reply to posts in nested threads.,Database,Topic-Based Discussion Forums,Planned,"DB: Design schema for Forums, Posts, and Replies.","As a Learner, I want to discuss topics with my peers in a forum.",
5,Community,1. Each module has a dedicated discussion forum. 2. Users can create new posts with rich text and attachments. 3. Users can reply to posts in nested threads.,Backend,Topic-Based Discussion Forums,Planned,BE: Create API endpoints for creating and viewing forum posts and replies.,"As a Learner, I want to discuss topics with my peers in a forum.",
6,Community,1. Admins can edit or delete any post or reply. 2. A placeholder message indicates when content has been removed.,Frontend,Community Moderation,Planned,"FE: Add 'Delete' and 'Edit' buttons to forum posts/replies, visible only to Admin users.","As an Admin, I want to moderate the community.",
6,Community,1. Admins can edit or delete any post or reply. 2. A placeholder message indicates when content has been removed.,Backend,Community Moderation,Planned,"BE: Add moderation capabilities (edit/delete) to forum API endpoints, restricted to Admin role.","As an Admin, I want to moderate the community.",
7,QA & Testing,1. Cross-device and cross-browser testing is completed. 2. Performance and load testing validate smooth scene transitions and response times.,QA,Performance & Cross-Device Testing,Planned,QA: Perform load testing on key API endpoints and performance profiling on front-end transitions.,"As a stakeholder, I want the platform to be fast and reliable on all devices.",
7,QA & Testing,1. E2E functional testing is completed across all features. 2. Usability checks on key flows are performed.,QA,End-to-End Testing,Planned,QA: Develop and execute end-to-end test scripts for the complete learner journey.,"As a stakeholder, I want the platform to be thoroughly tested.",
8,New & Clarified Items,"1. An API client connects to the ExerlebenAI endpoint. 2. Key events (login, quiz completion, etc.) are sent to the logging service.",Backend,Audit & Logging Layer (Integration),Backlog,BE: Implement the API client and event handlers to send all required audit events to the ExerlebenAI platform.,"As a Developer, I need to log all key interactions via the ExerlebenAI platform.",
8,New & Clarified Items,1. Platform displays a schedule of upcoming calls. 2. A 'Join Call' button launches an embedded video client. 3. Admins have moderation tools.,Frontend,Community - Live Calls (Flutlichttalk),Proposed,FE: Build UI to display upcoming calls and embed a video conferencing client.,"As a Learner, I want to join live video calls ('Flutlichttalk').",
8,New & Clarified Items,1. Platform displays a schedule of upcoming calls. 2. A 'Join Call' button launches an embedded video client. 3. Admins have moderation tools.,Backend,Community - Live Calls (Flutlichttalk),Proposed,BE: Create API endpoints to manage 'Flutlichttalk' schedules.,"As a Learner, I want to join live video calls ('Flutlichttalk').",
8,New & Clarified Items,1. A dedicated login for the 'Trainer' role exists. 2. The UI provides a form to enter scores and qualitative notes. 3. Submitted data populates the learner's profile.,Frontend,The Taktikcheck - Trainer-Facing UI,Backlog,FE: Build the secure 'Trainer-Facing UI' for Taktikcheck data entry.,"As a Trainer, I need a secure UI to enter on-site Taktikcheck results.",
8,New & Clarified Items,1. A dedicated login for the 'Trainer' role exists. 2. The UI provides a form to enter scores and qualitative notes. 3. Submitted data populates the learner's profile.,Backend,The Taktikcheck - Trainer-Facing UI,Backlog,BE: Add 'Trainer' role to the user authentication system and create API endpoint to save Taktikcheck data.,"As a Trainer, I need a secure UI to enter on-site Taktikcheck results.",